showExpr :: Expr -> String
showExpr (Lit n) = show n
showExpr (Add e1 e2) = (showExpr e1) ++ "+" ++ (showExpr e2)
showExpr (Sub e1 e2) = (showExpr e1) ++ "-" ++ (showExpr e2)

toList :: List t -> [t]
toList (Nil) = []
toList (Cons a b) = a : toList b

fromList :: [t] -> List t
fromList [] = Nil
fromList (x:xs) = Cons x (fromList xs) 
